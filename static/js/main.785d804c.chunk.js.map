{"version":3,"sources":["LoginForm.tsx","components/UploadSection.tsx","MainPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["LoginForm","history","useNavigate","React","createElement","type","placeholder","onClick","props","name","action","method","withCredentials","headers","authorization","onChange","info","file","status","console","log","fileList","message","success","concat","error","UploadSection","Upload","Button","icon","UploadOutlined","Header","Layout","Footer","Content","Sider","Search","Input","onSearch","value","items","map","key","label","target","rel","href","items2","UserOutlined","LaptopOutlined","NotificationOutlined","index","String","children","Array","fill","_","j","subKey","Main","colorBgContainer","theme","useToken","token","Row","gutter","xs","sm","md","lg","Col","className","span","src","alt","style","width","BellOutlined","Avatar","size","height","margin","Dropdown","menu","placement","arrow","trigger","background","Menu","mode","defaultSelectedKeys","defaultOpenKeys","borderRight","padding","Breadcrumb","Item","minHeight","App","kc","url","realm","clientId","Routes","Route","path","element","MainPage","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.785d804c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { login } from './loginService';\n\n\nfunction LoginForm() {\n  let history = useNavigate();\n  history('/mainpage');\n  return (\n    <div>\n      <input type=\"text\" placeholder='Username'/>\n      <input type=\"text\" placeholder='Password'/>\n      <button onClick={() => { history(\"/mainpage\");} }\n      >  Login  </button>\n    </div>\n  );\n}\n\nexport default LoginForm\n\n\n// export default function LoginForm() {\n//   const [email, setEmail] = useState('');\n//   const [password, setPassword] = useState('');\n//   const [error, setError] = useState('');\n//   const history = useNavigate();\n\n//   const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n//     e.preventDefault();\n//     try {\n//       await login(email, password);\n//       history('/');\n//     } catch (error) {\n//       setError('Invalid email or password');\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n//       <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n//       {error && <div>{error}</div>}\n//       <button type=\"submit\">Login</button>\n//     </form>\n//   );\n// }","import React from 'react';\nimport { UploadOutlined } from '@ant-design/icons';\nimport type { UploadProps } from 'antd';\nimport { Button, message, Upload } from 'antd';\n\nconst props: UploadProps = {\n  name: 'myFile',\n  action: 'http://localhost:3333/upload_to_s3',\n  method: 'POST',\n  withCredentials: true,\n  headers: {\n    authorization: 'authorization-text',\n    \n  },\n\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n    }\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n    } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n    }\n  },\n};\n\nconst UploadSection: React.FC = () => (\n      <Upload {...props}>\n        <Button icon={<UploadOutlined />}>Click to Upload</Button>\n      </Upload>\n      );\n\n      export default UploadSection;","import React from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport UploadSection from './components/UploadSection';\nimport 'antd/dist/reset.css';\nconst { Header, Footer, Content, Sider } = Layout;\nimport { Input,Button,Avatar, Breadcrumb, Menu, theme, Dropdown } from 'antd';\nimport type { MenuProps } from 'antd';\nimport { BellOutlined, UserOutlined,LaptopOutlined, NotificationOutlined } from '@ant-design/icons';\nimport './index.css';\nconst { Search } = Input;\nconst onSearch = (value: string) => console.log(value);\n\nconst items1: MenuProps['items'] = ['1', '2', '3'].map((key) => ({\n  key,\n  label: `nav ${key}`,\n}));\nconst items: MenuProps['items'] = [\n  {\n    key: '1',\n    label: (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.antgroup.com\">\n        1st menu item\n      </a>\n    ),\n  },\n  {\n    key: '2',\n    label: (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.aliyun.com\">\n        2nd menu item\n      </a>\n    ),\n  },\n  {\n    key: '3',\n    label: (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.luohanacademy.com\">\n        3rd menu item\n      </a>\n    ),\n  },\n];\n\nconst items2: MenuProps['items'] = [UserOutlined, LaptopOutlined, NotificationOutlined].map(\n  (icon, index) => {\n    const key = String(index + 1);\n\n    return {\n      key: `sub${key}`,\n      icon: React.createElement(icon),\n      label: `subnav ${key}`,\n\n      children: new Array(4).fill(null).map((_, j) => {\n        const subKey:number = index * 4 + j + 1;\n        return {\n          key: subKey,\n          label: `option${subKey}`,\n        };\n      }),\n    };\n  },\n);\n\n\nconst Main = () => {\n  const {\n    token: { colorBgContainer },\n  } = theme.useToken();\n\n  return ( <Layout>\n    <Header>\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n        <Col className='Logo' span={6}>\n          <img src=\"./QAS.svg\" alt=\"logo\" />\n        </Col> \n        <Col className='Search-bar' span={12}>\n          <Search className='Search' placeholder=\"input search text\" onSearch={onSearch} style={{ width: 500 }} />\n        </Col>\n          <Col className='Bellout' span={6}>\n          <BellOutlined className='bell' />\n          <Avatar className='Avartar' size={40} icon={<UserOutlined />} />\n          </Col>\n      \n      </Row>\n    </Header>\n\n    <Content style={{ width: '80%',height: '1000px', margin: '0 0' }}>\n    <UploadSection />\n    <Dropdown menu={{ items }} placement=\"bottomLeft\" arrow trigger={['click']}>\n      <Button>bottomLeft</Button>\n    </Dropdown>\n    <Layout>\n        <Sider width={200} style={{ background: colorBgContainer }}>\n          <Menu\n            mode=\"inline\"\n            defaultSelectedKeys={['1']}\n            defaultOpenKeys={['sub1']}\n            style={{ height: '100%', borderRight: 0 }}\n            items={items2}\n          />\n        </Sider>\n        <Layout style={{ padding: '0 24px 24px' }}>\n          <Breadcrumb style={{ margin: '16px 0' }}>\n            <Breadcrumb.Item>Home</Breadcrumb.Item>\n            <Breadcrumb.Item>List</Breadcrumb.Item>\n            <Breadcrumb.Item>App</Breadcrumb.Item>\n          </Breadcrumb>\n          <Content\n            style={{\n              width: 1000,\n              padding: 24,\n              margin: 0,\n              minHeight: 280,\n              background: colorBgContainer,\n            }}\n          >\n            Content\n          </Content>\n        </Layout>\n      </Layout>  \n    </Content>\n\n    <Footer >Footer</Footer>\n\n  </Layout>\n  );\n};\n\nexport default Main;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport LoginForm from './LoginForm';\nimport MainPage from './MainPage';\nimport kc from 'keycloak-js';\n\nfunction App() {\n  const keycloak = new kc({\n    url: 'http://keycloak-server${kc_base_path}',\n    realm: 'myrealm',\n    clientId: 'myapp'\n});\n  return (\n    <Routes>\n        <Route path=\"/\" element={<LoginForm/>} />\n        <Route path=\"/mainpage\" element={<MainPage/>}/>\n    </Routes>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport Main from './MainPage';\nimport Login from './LoginForm';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}